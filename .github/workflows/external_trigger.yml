name: External Trigger

on:
  workflow_dispatch:

jobs:
  external-trigger:
    runs-on: ubuntu-latest
    env:
      REPO_BASE: ${{ github.repository }}
      IMAGE_TAG: latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        if: github.ref == 'refs/heads/master'

      - name: Retrieve External Version
        run: |
          EXT_RELEASE=$(curl -sL https://api.github.com/repos/Manager-io/Manager/releases/latest | jq -r '.tag_name')
          if [ -z "${EXT_RELEASE}" ] || [ "${EXT_RELEASE}" == "null" ]; then
            echo "> [!WARNING]" >> $GITHUB_STEP_SUMMARY
            echo "> Can't retrieve external version, exiting." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "External version: \`${EXT_RELEASE}\`" >> $GITHUB_STEP_SUMMARY
          echo "EXT_RELEASE=${EXT_RELEASE}" >> ${GITHUB_ENV}
          echo "REPO=${REPO_BASE,,}" >> ${GITHUB_ENV}

      - name: Compare Versions and Trigger Build
        run: |
          token=$(curl -sX GET "https://ghcr.io/token?scope=repository:${REPO}:pull" | jq -r '.token')
          multidigest=$(curl -s \
            --header "Accept: application/vnd.docker.distribution.manifest.v2+json" \
            --header "Accept: application/vnd.oci.image.index.v1+json" \
            --header "Authorization: Bearer ${token}" \
            "https://ghcr.io/v2/${REPO}/manifests/${IMAGE_TAG}")

          if jq -e '.layers // empty' <<< "${multidigest}" >/dev/null 2>&1; then
            # If there's a layer element it's a single-arch manifest so just get that digest
            digest=$(jq -r '.config.digest' <<< "${multidigest}")
          else
            # Otherwise it's multi-arch or has manifest annotations
            if jq -e '.manifests[]?.annotations // empty' <<< "${multidigest}" >/dev/null 2>&1; then
              # Check for manifest annotations and delete if found
              multidigest=$(jq 'del(.manifests[] | select(.annotations))' <<< "${multidigest}")
            fi
            if [[ $(jq '.manifests | length' <<< "${multidigest}") -gt 1 ]]; then
              # If there's still more than one digest, it's multi-arch
              multidigest=$(jq -r ".manifests[] | select(.platform.architecture == \"amd64\").digest?" <<< "${multidigest}")
            else
              # Otherwise it's single arch
              multidigest=$(jq -r ".manifests[].digest?" <<< "${multidigest}")
            fi
            if digest=$(curl -s \
              --header "Accept: application/vnd.docker.distribution.manifest.v2+json" \
              --header "Accept: application/vnd.oci.image.manifest.v1+json" \
              --header "Authorization: Bearer ${token}" \
              "https://ghcr.io/v2/${REPO}/manifests/${multidigest}"); then
              digest=$(jq -r '.config.digest' <<< "${digest}");
            fi
          fi

          image_info=$(curl -sL \
            --header "Authorization: Bearer ${token}" \
            "https://ghcr.io/v2/${REPO}/blobs/${digest}")
          if [[ $(echo $image_info | jq -r '.container_config') == "null" ]]; then
            image_info=$(echo $image_info | jq -r '.config')
          else
            image_info=$(echo $image_info | jq -r '.container_config')
          fi

          IMAGE_RELEASE=$(echo ${image_info} | jq -r '.Labels.build_version' | awk '{print $2}')
          IMAGE_VERSION=$(echo ${IMAGE_RELEASE} | awk '{print $1}')
          if [ -z "${IMAGE_VERSION}" ]; then
            echo "> [!WARNING]" >> $GITHUB_STEP_SUMMARY
            echo "Can't retrieve last pushed version, exiting" >> $GITHUB_STEP_SUMMARY
          fi

          if [ "${EXT_RELEASE}" == "${IMAGE_VERSION}" ]; then
            echo "Version \`${EXT_RELEASE}\` already pushed, exiting" >> $GITHUB_STEP_SUMMARY
            exit 0
          else
            printf "\n## Trigger new build\n\n" >> $GITHUB_STEP_SUMMARY
            echo "New version \`${EXT_RELEASE}\` found; old version was \`${IMAGE_VERSION}\`. Triggering new build" >> $GITHUB_STEP_SUMMARY
            # Check if external trigger workflow exists using GitHub API
            curl -sSLX GET "https://api.github.com/repos/${REPO}/actions/workflows/builder.yml" > /dev/null 2>&1
            if [[ $? == 0 ]]; then
              # Trigger builder workflow
              curl -X POST \
                -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -H "Accept: application/vnd.github.v3+json" \
                -d "{\"ref\":\"refs/heads/main\"}" \
                "https://api.github.com/repos/${REPO}/actions/workflows/builder.yml/dispatches"
            else
              echo "Skipping branch due to no builder workflow present." >> $GITHUB_STEP_SUMMARY
            fi
          fi
